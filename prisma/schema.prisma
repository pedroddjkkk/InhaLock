generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               String    @id @unique
  username         String
  email            String    @unique
  pushSubscription Json?
  auth_session     Session[]
  key              Key[]
  lockers          Lock[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Lock {
  id            Int                @id @unique @default(autoincrement())
  user_id       String
  user          User               @relation(references: [id], fields: [user_id], onDelete: Cascade)
  name          String
  password      String?
  description   String?
  securityCode  String             @unique
  status        LockStatus         @default(DESCONECTADO)
  willOpen      Boolean?
  temporaryKeys TemporaryLockKey[]
}

model TemporaryLockKey {
  id        Int      @id @unique @default(autoincrement())
  name      String
  password  String?
  expiresAt DateTime
  lock_id   Int
  lock      Lock     @relation(references: [id], fields: [lock_id], onDelete: Cascade)
}

enum LockStatus {
  ABERTO
  FECHADO
  CONECTADO
  DESCONECTADO
}
